server {
    listen 80; # Escrucha en el puerto 80
    index index.php index.html; # Prioridad de archivos al abrir una carpeta. Busca index.php. Si no existe, busca index.html.

    #ℹ️ Archivos logs para revisar errores. Se guardan en: /home/tuUser/servers/laravel_example/nginx/data/logs
    error_log  /var/log/nginx/laravel_example_error.log; # si NGINX tiene errores, los guarda aquí.
    access_log /var/log/nginx/laravel_example_access.log; # cada vez que alguien accede, guarda un registro aquí.

    root /var/www/public; # Laravel empieza en la carpeta public, no en la raíz /var/www Esto protege tus archivos internos de Laravel (env, routes, etc).
    location ~ \.php$ { # llega un archivo .php (por ejemplo index.php).
        try_files $uri =404; # Si existe el archivo ($uri), lo usa, si no error 404
        fastcgi_split_path_info ^(.+\.php)(/.+)$; #Divide el nombre del archivo PHP y los parámetros del URL.
        fastcgi_pass laravel_example_php:9000; # Enviar las peticiones PHP al contenedor de *laravel_example_php* (haciendo referencia al archivo docker-compose.yml) por el puerto 9000
        fastcgi_index index.php; # Si falla ejecutar, por defecto usa index.php.
        include fastcgi_params; # Cargar parámetros estándar de NGINX. variables necesarias para que PHP-FPM funcione bien.
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name; # Decirle exactamente a PHP cuál archivo tiene que ejecutar.
        fastcgi_param PATH_INFO $fastcgi_path_info; #Enviar también información sobre el "path" adicional (si hay).
    }
    location / { #Gestionar las rutas
        try_files $uri $uri/ /index.php?$query_string; # busca si existe la carpeta o archivo. Si no existe, redirige automáticamente a index.php con los parámetros correctos.
        gzip_static on; # Servir archivos comprimidos .gz si existen
    }
}